<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ringdingdong.ridingthewind.model.mapper.ArticleMapper">

	<resultMap type="articleDto" id="articleDto">
		<result column="article_no" property="articleNo"/>
		<result column="subject" property="subject"/>
		<result column="hit" property="hit"/>
		<result column="like" property="like"/>
		<result column="register_time" property="registerTime"/>
		<result column="nickname" property="nickname"/>
	</resultMap>

	<resultMap type="articleDetailDto" id="articleDetailDto" extends="articleDto">
		<result column="member_id" property="memberId"/>
		<result column="content" property="content"/>
		<result column="modify_time" property="modifyTime"/>
	</resultMap>

	<insert id="writeArticle" parameterType="map" useGeneratedKeys="true"
			keyProperty="articleNo" keyColumn="article_no">
		insert into article (member_id, subject, content)
		values (#{memberId}, #{subject}, #{content})
	</insert>
	
	<sql id="search">
		<if test="key != null and word != ''">
			<if test="key == 'subject' || key == 'nickname'">
				and ${key} like concat('%', #{word}, '%')
			</if>
			<if test="!(key == 'subject' || key == 'nickname')">
				and a.${key} = #{word}
			</if>
		</if>
	</sql>

	<select id="listArticle" parameterType="map" resultMap="articleDto">
		select a.article_no, a.subject, a.hit, a.like, a.register_time, m.nickname
		from article a, member m
		where a.member_id = m.member_id
		<include refid="search"></include>
		order by a.article_no desc
		limit #{start}, #{spp}
	</select>

	<select id="listHotArticle" parameterType="int" resultMap="articleDetailDto">
		SELECT *
		FROM article
		WHERE register_time >= DATE_SUB(CURDATE(), INTERVAL ${period} DAY)
		  AND article_no IN (SELECT DISTINCT article_no
							 FROM article_attraction_map)
		ORDER BY `like` DESC LIMIT 5;
	</select>

	<select id="getTotalArticleCount" parameterType="map" resultType="int">
		select count(article_no)
		from article a, member m
		where a.member_id = m.member_id
		<include refid="search"></include>
	</select>
	
	<select id="getArticle" parameterType="int" resultMap="articleDetailDto">
		select a.article_no, a.member_id, a.subject, a.content, a.hit, a.like, a.modify_time, m.nickname
		from article a, member m
		where a.member_id = m.member_id
		and a.article_no = #{articleNo}
	</select>

	<update id="addArticleLike" parameterType="int">
		update article
		set `like` = `like` + 1
		where article_no = #{articleNo}
	</update>

	<update id="subArticleLike" parameterType="int">
		update article
		set `like` = `like` - 1
		where article_no = #{articleNo}
	</update>

	<update id="updateHit" parameterType="int">
		update article
		set hit = hit + 1
		where article_no = #{articleNo}
	</update>
	
	<update id="modifyArticle" parameterType="map">
		update article
		set subject = #{subject}, content = #{content}
		where article_no = #{articleNo}
	</update>

	
	<delete id="deleteArticle" parameterType="int">
		delete from article
		where article_no = #{articleNo}
	</delete>
	
</mapper>